# Frontend
- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: dark_teal

# Google Sync
- alias: Sync Google Assistant
  trigger:
    platform: homeassistant
    event: start
  action:
    - delay: '00:00:45'
    - service: google_assistant.request_sync

# Sunrise
- alias: Sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:00:00'
  action:
    service: light.turn_off
    entity_id:
      - light.outdoor
      - light.living
      - light.hallway
      - light.table_lamp
      - light.wc

# Sunset
- alias: Sunset
  trigger:
    platform: sun
    event: sunset
    offset: "-00:45:00"
  action:
    - service: light.turn_on
      entity_id: group.sunset_lights
    - service: script.hue
      data:
        name: hallway
        mode: calm
    - service: script.hue
      data:
        name: tablelamp
        mode: calm

# Midnight
- alias: Midnight
  trigger:
    platform: time
    at: '00:00:00'
  condition:
    condition: state
    entity_id: input_boolean.turn_off_but_outside
    state: 'on'
  action:
    service: script.turn_off_but_outside

# AC & Melacha
- alias: Turn off AC when melacha is on
  trigger:
    platform: time
    at:
      - '10:00:00'
      - '20:00:00'
  condition:
    condition: state
    entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
    state: 'on'
  action:
    service: climate.turn_off
    data:
      entity_id: climate.living_ac

- alias: Turn on AC when melacha is on
  trigger:
    platform: time
    at: '00:00:00'
  condition:
    - condition: state
      entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
      state: 'on'
    - condition: state
      entity_id: input_boolean.ac_melacha_auto_trigger
      state: 'on'
  action:
    service: climate.set_temperature
    data:
      entity_id: climate.living_ac
      temperature: 22
      hvac_mode: cool

# Water boiler
- alias: Turn on water boiler
  trigger:
    - platform: time
      at:
        - '06:00:00'
        - '17:00:00'
    - platform: state
      entity_id: input_boolean.wb_auto_trigger
      to: 'off'
    - platform: template
      value_template: "{{ as_timestamp(now()) >= (as_timestamp(states('sensor.jewish_calendar_upcoming_candle_lighting')) - 170 * 60) }}"
  action:
    service: switch.turn_on
    entity_id: switch.sonoff_10008508fb

- alias: Turn off water boiler
  trigger:
    - platform: numeric_state
      entity_id: sensor.termotanque_temperatura
      above: 63
    - platform: state
      entity_id: switch.sonoff_10008508fb
      to: 'on'
    - platform: state
      entity_id: input_boolean.wb_auto_trigger
      to: 'on'
  condition:
    - condition: numeric_state
      entity_id: sensor.termotanque_temperatura
      above: 63
    - condition: state
      entity_id: input_boolean.wb_auto_trigger
      state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.sonoff_10008508fb

- alias: Toggle water boiler
  trigger:
    platform: event
    event_type: sonoff.remote
    event_data:
      name: wb
  action:
    service: switch.toggle
    entity_id: switch.sonoff_10008508fb

# PiHole
- alias: Enable Pihole again
  trigger:
    - platform: state
      entity_id: sensor.pihole_status
      to: 'Enabled'
  condition:
    - condition: state
      entity_id: switch.pihole
      state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.pihole

# AC's Condensate Pump
- alias: Turn on condensate pump
  trigger:
    - platform: state
      entity_id: climate.living_ac
      to:
        - 'cool'
        - 'heat'
        - 'dry'
    - platform: state
      entity_id: climate.dormitorio_ac
      to:
        - 'cool'
        - 'heat'
        - 'heat_cool'
        - 'dry'
  action:
    service: switch.turn_on
    entity_id: switch.sonoff_1000854c6a

- alias: Turn off condensate pump living
  trigger:
    - platform: state
      entity_id: climate.living_ac
      to: 'off'
    - platform: state
      entity_id: climate.dormitorio_ac
      to: 'off'
  condition:
    - condition: state
      entity_id: climate.dormitorio_ac
      state: 'off'
    - condition: state
      entity_id: climate.living_ac
      state: 'off'
  action:
    service: switch.turn_off
    entity_id: switch.sonoff_1000854c6a

- alias: fan_bedroom
  trigger:
    platform: state
    entity_id: input_number.fan_bedroom
  action:
    service: fan.set_speed
    data_template:
      entity_id: fan.sonoff_1000954850
      speed: >
        {% if is_state('input_number.fan_bedroom', '0.0') %} off
        {% elif is_state('input_number.fan_bedroom', '1.0') %} low
        {% elif is_state('input_number.fan_bedroom', '2.0') %} medium
        {% else %} high
        {% endif %}

- alias: fan_bedroom_sync
  trigger:
    platform: state
    entity_id: fan.sonoff_1000954850
  action:
    service: input_number.set_value
    data_template:
      entity_id: input_number.fan_bedroom
      value: >
        {% if is_state_attr('fan.sonoff_1000954850', 'speed', 'off') %} 0
        {% elif is_state_attr('fan.sonoff_1000954850', 'speed', 'low') %} 1
        {% elif is_state_attr('fan.sonoff_1000954850', 'speed', 'medium') %} 2
        {% else %} 3
        {% endif %}

- alias: fan_bedroom_off_remote
  trigger:
    platform: event
    event_type: sonoff.remote
    event_data:
      name: fan_off
  action:
    service: fan.turn_off
    entity_id: fan.sonoff_1000954850

- alias: fan_bedroom_speed_remote
  trigger:
    platform: event
    event_type: sonoff.remote
    event_data:
      name: fan_speed
  action:
    service: fan.set_speed
    data_template:
      entity_id: fan.sonoff_1000954850
      speed: >
        {% set speed = state_attr('fan.sonoff_1000954850', 'speed') %}
        {% if speed == 'off' or speed == 'high' %} low
        {% elif speed == 'low' %} medium
        {% else %} high
        {% endif %}

- alias: Turn on office's AC
  trigger:
    platform: time
    at: '08:30:00'
  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: state
      entity_id: input_boolean.ac_office_auto_trigger
      state: 'on'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.sonoff_100085069c

- alias: From wall switch turn on office's AC
  trigger:
    platform: state
    entity_id: switch.sonoff_1000950368_2
    to: 'on'
  condition:
    condition: state
    entity_id: switch.sonoff_100085069c
    state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.sonoff_100085069c

- alias: From wall switch turn off office's AC
  trigger:
    platform: state
    entity_id: switch.sonoff_1000950368_2
    to: 'off'
  condition:
    condition: state
    entity_id: switch.sonoff_100085069c
    state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.sonoff_100085069c

- alias: From office's AC sync to wall switch to on
  trigger:
    platform: state
    entity_id: switch.sonoff_100085069c
    to: 'on'
  condition:
    condition: state
    entity_id: switch.sonoff_1000950368_2
    state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.sonoff_1000950368_2

- alias: From office's AC sync to wall switch to off
  trigger:
    platform: state
    entity_id: switch.sonoff_100085069c
    to: 'off'
  condition:
    condition: state
    entity_id: switch.sonoff_1000950368_2
    state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.sonoff_1000950368_2

# Calendar
- alias: Turn on lights at Shabbat veIom Tov
  trigger:
    platform: state
    entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
    to: 'on'
  action:
    service: light.turn_on
    entity_id:
      - group.melacha_lights

- alias: Turn on pending Kiddush Levanah
  trigger:
    platform: state
    entity_id: sensor.moon
    to:
      - 'waxing_gibbous'
      - 'full_moon'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.pending_kiddush_levana

- alias: Turn off pending Kiddush Levanah
  trigger:
    platform: state
    entity_id: sensor.moon
    to: 'waning_gibbous'
  condition:
    - condition: state
      entity_id: input_boolean.pending_kiddush_levana
      state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.pending_kiddush_levana

# iOS actions
- alias: turn_off_but_outside
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: turn_off_but_outside
  action:
    service: script.turn_on
    entity_id: script.turn_off_but_outside

- alias: toggle_basic_lights
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_basic_lights
  action:
    service: light.toggle
    entity_id: group.basic_lights

- alias: toggle_living_ac
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_living_ac
  action:
    service_template: >
      {% if is_state('climate.living_ac', 'off') %}
        climate.turn_on
      {% else %}
        climate.turn_off
      {% endif %}
    entity_id: climate.living_ac

- alias: toggle_bedroom_ac
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_bedroom_ac
  action:
    service_template: >
      {% if is_state('climate.dormitorio_ac', 'off') %}
        climate.turn_on
      {% else %}
        climate.turn_off
      {% endif %}
    entity_id: climate.dormitorio_ac

- alias: toggle_stockroom_ac
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_stockroom_ac
  action:
    service: switch.toggle
    entity_id: switch.sonoff_100085069c

- alias: toggle_living_tv
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_living_tv
  action:
    - service: input_select.set_options
      data:
        entity_id: input_select.tv_location
        options: 'Living'
    - service: script.broadlink_send_command
      data:
        device: 'television'
        command: 'power'

- alias: toggle_bedroom_tv
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_bedroom_tv
  action:
    - service: input_select.set_options
      data:
        entity_id: input_select.tv_location
        options: 'Bedroom'
    - service: script.broadlink_send_command
      data:
        device: 'television'
        command: 'power'

- alias: wb_auto_trigger
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: wb_auto_trigger
  action:
    - service: input_boolean.toggle
      data:
        entity_id: input_boolean.wb_auto_trigger

- alias: pihole_disable_30s
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: pihole_disable_30s
  action:
    - service: pi_hole.disable
      data:
        entity_id: switch.pihole
        duration: '00:00:30'

# Speakers
- alias: volume_speaker
  trigger:
    platform: state
    entity_id: input_number.volume_speaker
  action:
    service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state('input_select.speakers', 'Living') %} media_player.living
        {% elif is_state('input_select.speakers', 'Chromecast') %} media_player.chromecast
        {% elif is_state('input_select.speakers', 'Kitchen') %} media_player.cocina
        {% elif is_state('input_select.speakers', 'Bedroom') %} media_player.dormitorio
        {% elif is_state('input_select.speakers', 'Everywhere') %} group.everywhere_speakers
        {% endif %}
      volume_level: "{{ states('input_number.volume_speaker')  }}"

- alias: night_notification
  trigger:
    - platform: time
      at:
        - '22:00:00'
        - '23:00:00'
  action:
    - service: media_player.volume_set
      data:
        entity_id: all
        volume_level: 0.2
    - delay: 5
    - service: tts.google_say
      data_template:
        entity_id: all
        language: es
        message: >
          "Son las {{ as_timestamp(now()) |  timestamp_custom("%I") }} en punto"

- alias: Set volume of speakers based of time of day
  use_blueprint:
    path: set_speakers_vol_based_time.yaml
    input:
      volume_night: 0.1
      daytime_ends: '23:15:00'
      filter:
        entity_id:
          - media_player.living
          - media_player.cocina
          - media_player.dormitorio

# Philips Hue
- alias: Keep Bedroom's light on
  trigger:
    platform: time_pattern
    seconds: "/15"
  condition:
    condition: state
    entity_id: light.sonoff_1000954850_1
    state: 'off'
  action:
    service: light.turn_on
    entity_id: light.sonoff_1000954850_1

- alias: Hue switch turn on
  trigger:
    # living 1
    - device_id: d6af8b65a2421798f82a12e4e09b0165
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_on
    # living 2
    - device_id: ccacfcdcc1e597fe82877a9b3837de79
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_on
    # hallway
    - device_id: 492781cba7c67a0d83689dc7626c4060
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_on
    # bedroom
    - device_id: bb1eb6df52fae0c57dbe24b1a059424a
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_on
    # table lamp
    - device_id: b41fd3adfe6c7602f8cc40abaeceff9f
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_on
    # wc
    - device_id: 2c8a5c9f115de1f0f9749bee80919f11
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_on
  variables:
    name: >
      {% set id = trigger.event.as_dict()['data']['id'] %}
      {{ 'living' if id.startswith('living') else id }}
    light: "light.{{ name }}"
    input: "input_select.hue_{{ name }}"
  action:
    choose:
      # turn on
      - conditions:
          - condition: template
            value_template: "{{ states(light) == 'off' }}"
          - condition: time
            after: "07:00:00"
            before: "00:00:00"
        sequence:
          service: script.hue
          data_template:
            name: "{{ name }}"
            mode: "{{ states(input) }}"
      # turn on (night mode)
      - conditions:
          - condition: template
            value_template: "{{ states(light) == 'off' }}"
          - condition: time
            before: "07:00:00"
        sequence:
          service: script.hue
          data_template:
            name: "{{ name }}"
            mode: "night"
      # Hue cycle mode
      - conditions:
          condition: template
          value_template: "{{ states(light) == 'on' }}"
        sequence:
          - service: input_select.select_next
            data_template:
              entity_id: "{{ input }}"
          - service: script.hue
            data_template:
              name: "{{ name }}"
              mode: "{{ states(input) }}"

- alias: Hue switch brightness increase
  trigger:
    # living 1
    - device_id: d6af8b65a2421798f82a12e4e09b0165
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_up
    # living 2
    - device_id: ccacfcdcc1e597fe82877a9b3837de79
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_up
    # hallway
    - device_id: 492781cba7c67a0d83689dc7626c4060
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_up
    # bedroom
    - device_id: bb1eb6df52fae0c57dbe24b1a059424a
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_up
    # table lamp
    - device_id: b41fd3adfe6c7602f8cc40abaeceff9f
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_up
    # wc
    - device_id: 2c8a5c9f115de1f0f9749bee80919f11
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_up
  variables:
    name: >
      {% set id = trigger.event.as_dict()['data']['id'] %}
      {{ 'living' if id.startswith('living') else id }}
    light: "light.{{ name }}"
    state: >
      {% set bri_state = state_attr(light, 'brightness') %}
      {% if bri_state >= 225 %}
        255
      {% else %}
        {{ bri_state + 30 }}
      {% endif %}
  action:
    service: light.turn_on
    data_template:
      entity_id: "{{ light }}"
      brightness: "{{ state }}"

- alias: Hue switch brightness decrease
  trigger:
    # living 1
    - device_id: d6af8b65a2421798f82a12e4e09b0165
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_down
    # living 2
    - device_id: ccacfcdcc1e597fe82877a9b3837de79
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_down
    # hallway
    - device_id: 492781cba7c67a0d83689dc7626c4060
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_down
    # bedroom
    - device_id: bb1eb6df52fae0c57dbe24b1a059424a
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_down
    # table lamp
    - device_id: b41fd3adfe6c7602f8cc40abaeceff9f
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_down
    # wc
    - device_id: 2c8a5c9f115de1f0f9749bee80919f11
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: dim_down
  variables:
    name: >
      {% set id = trigger.event.as_dict()['data']['id'] %}
      {{ 'living' if id.startswith('living') else id }}
    light: "light.{{ name }}"
    state: >
      {% set bri_state = state_attr(light, 'brightness') %}
      {% if bri_state <= 30 %}
        1
      {% else %}
        {{ bri_state - 30 }}
      {% endif %}
  action:
    service: light.turn_on
    data_template:
      entity_id: "{{ light }}"
      brightness: "{{ state }}"

- alias: Hue switch turn off
  trigger:
    # living 1
    - device_id: d6af8b65a2421798f82a12e4e09b0165
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_off
    # living 2
    - device_id: ccacfcdcc1e597fe82877a9b3837de79
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_off
    # hallway
    - device_id: 492781cba7c67a0d83689dc7626c4060
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_off
    # bedroom
    - device_id: bb1eb6df52fae0c57dbe24b1a059424a
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_off
    # table lamp
    - device_id: b41fd3adfe6c7602f8cc40abaeceff9f
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_off
    # wc
    - device_id: 2c8a5c9f115de1f0f9749bee80919f11
      domain: hue
      platform: device
      type: remote_button_short_release
      subtype: turn_off
  variables:
    name: >
      {% set id = trigger.event.as_dict()['data']['id'] %}
      {{ 'living' if id.startswith('living') else id }}
  action:
    service: light.turn_off
    data_template:
      entity_id: "light.{{ name }}"

# Lights
- alias: Toggle floor lamp
  trigger:
    platform: event
    event_type: sonoff.remote
    event_data:
      name: floorlamp
  action:
    service: light.toggle
    entity_id: light.sonoff_1000766c93

- alias: Toggle kitchen light01
  trigger:
    platform: event
    event_type: sonoff.remote
    event_data:
      name: Kitchen_Button1
  action:
    service: light.toggle
    entity_id: light.sonoff_100094ff53_1

- alias: Toggle kitchen light02
  trigger:
    platform: event
    event_type: sonoff.remote
    event_data:
      name: Kitchen_Button2
  action:
    service: light.toggle
    entity_id: light.sonoff_100094ff53_2

# Buzzer
- alias: Buzzer
  trigger:
    platform: event
    event_type: sonoff.remote
    event_data:
      name: buzzer
  action:
    service: notify.mobile_app_fbs_iphone
    data:
      message: "Someone's at front door"

# Partition free space
- alias: Partition free space
  trigger:
    - platform: numeric_state
      entity_id: sensor.disk_use_percent_var_log
      value_template: "{{ float(states('sensor.disk_use_percent_var_log')) }}"
      above: 70
    - platform: numeric_state
      entity_id: sensor.disk_use_percent_var_log
      value_template: "{{ float(states('sensor.disk_use_percent_var_log')) }}"
      above: 80
  variables:
    state: "{{ states('sensor.disk_use_percent_var_log') }}"
    level: "{% if float(state) >= 80 %}CRITICAL{% else %}WARNING{% endif %}"
  action:
    - service: notify.mobile_app_fbs_iphone
      data:
        title: "{{ level }}"
        message: "Partition /var/log raised {{ state }}%"
    - service: notify.mobile_app_facundos_macbook_air
      data:
        title: "{{ level }}"
        message: "Partition /var/log raised {{ state }}%"
