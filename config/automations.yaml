# Frontend
- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: dark_teal

# Sunrise
- alias: Sunrise
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:00:00'
  action:
    service: light.turn_off
    entity_id: light.sonoff_1000950368_2

# Sunset
- alias: Sunset
  trigger:
    platform: sun
    event: sunset
    offset: "-00:45:00"
  action:
    service: light.turn_on
    entity_id: group.sunset_lights

# Water boiler
- alias: Turn on water boiler
  trigger:
    - platform: time
      at:
        - '06:00:00'
        - '19:00:00'
    - platform: state
      entity_id: input_boolean.wb_ignore_trigger
      to: 'on'
    - platform: state
      entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
        state: 'off'
      - condition: state
        entity_id: input_boolean.wb_ignore_melaja
        state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.sonoff_10008508fb

- alias: Turn off water boiler
  trigger:
    - platform: numeric_state
      entity_id: sensor.termotanque_temperatura
      above: 28
    - platform: state
      entity_id: switch.sonoff_10008508fb
      to: 'on'
    - platform: state
      entity_id: input_boolean.wb_ignore_trigger
      to: 'off'
  condition:
    - condition: numeric_state
      entity_id: sensor.termotanque_temperatura
      above: 28
    - condition: state
      entity_id: input_boolean.wb_ignore_trigger
      state: 'off'
  action:
    service: switch.turn_off
    entity_id: switch.sonoff_10008508fb

# PiHole
- alias: Enable Pihole again
  trigger:
    - platform: state
      entity_id: sensor.pihole_status
      to: 'Enabled'
  condition:
    - condition: state
      entity_id: switch.pihole
      state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.pihole

# AC's Condensate Pump
- alias: Turn on condensate pump
  trigger:
    - platform: state
      entity_id: climate.living_ac
      to:
        - 'cool'
        - 'heat'
        - 'dry'
    - platform: state
      entity_id: climate.dormitorio_ac
      to:
        - 'cool'
        - 'heat'
        - 'heat_cool'
        - 'dry'
  action:
    service: switch.turn_on
    entity_id: switch.sonoff_1000854c6a

- alias: Turn off condensate pump living
  trigger:
    - platform: state
      entity_id: climate.living_ac
      to: 'off'
    - platform: state
      entity_id: climate.dormitorio_ac
      to: 'off'
  condition:
    - condition: state
      entity_id: climate.dormitorio_ac
      state: 'off'
    - condition: state
      entity_id: climate.living_ac
      state: 'off'
  action:
    service: switch.turn_off
    entity_id: switch.sonoff_1000854c6a

# Calendar
- alias: Turn on lights at Shabbat veIom Tov
  trigger:
    platform: state
    entity_id: binary_sensor.jewish_calendar_issur_melacha_in_effect
    to: 'on'
  action:
    service: light.turn_on
    entity_id:
      - light.sonoff_1000950368_1
      - light.sonoff_100094ff53_2
      - light.sonoff_1000951aac

- alias: Turn on pending Kiddush Levanah
  trigger:
    platform: state
    entity_id: sensor.moon
    to:
      - 'waxing_gibbous'
      - 'full_moon'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.pending_kiddush_levana

- alias: Turn off pending Kiddush Levanah
  trigger:
    platform: state
    entity_id: sensor.moon
    to: 'waning_gibbous'
  condition:
    - condition: state
      entity_id: input_boolean.pending_kiddush_levana
      state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.pending_kiddush_levana

# iOS actions
- alias: turn_off_but_outside
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: turn_off_but_outside
  action:
    service: script.turn_on
    entity_id: script.turn_off_but_outside

- alias: toggle_basic_lights
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_basic_lights
  action:
    service: light.toggle
    entity_id: group.basic_lights

- alias: toggle_living_ac
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_living_ac
  action:
    service_template: >
      {% if is_state('climate.living_ac', 'off') %}
        climate.turn_on
      {% else %}
        climate.turn_off
      {% endif %}
    entity_id: climate.living_ac

- alias: toggle_bedroom_ac
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_bedroom_ac
  action:
    service_template: >
      {% if is_state('climate.dormitorio_ac', 'off') %}
        climate.turn_on
      {% else %}
        climate.turn_off
      {% endif %}
    entity_id: climate.dormitorio_ac

- alias: toggle_stockroom_ac
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_stockroom_ac
  action:
    service: switch.toggle
    entity_id: switch.sonoff_100085069c

- alias: toggle_living_tv
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_living_tv
  action:
    - service: input_select.set_options
      data:
        entity_id: input_select.tv_location
        options: 'Living'
    - service: script.broadlink_send_command
      data:
        device: 'television'
        command: 'power'

- alias: toggle_bedroom_tv
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: toggle_bedroom_tv
  action:
    - service: input_select.set_options
      data:
        entity_id: input_select.tv_location
        options: 'Bedroom'
    - service: script.broadlink_send_command
      data:
        device: 'television'
        command: 'power'

- alias: wb_ignore_trigger
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: wb_ignore_trigger
  action:
    - service: input_boolean.toggle
      data:
        entity_id: input_boolean.wb_ignore_trigger

- alias: pihole_disable_30s
  trigger:
    - platform: event
      event_type: ios.action_fired
      event_data:
        actionName: pihole_disable_30s
  action:
    - service: pi_hole.disable
      data:
        entity_id: switch.pihole
        duration: '00:00:30'

# Speakers
- alias: volume_speaker
  trigger:
    platform: state
    entity_id: input_number.volume_speaker
  action:
    service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state('input_select.speakers', 'Living') %} media_player.living
        {% elif is_state('input_select.speakers', 'Chromecast') %} media_player.chromecast
        {% elif is_state('input_select.speakers', 'Kitchen') %} media_player.cocina
        {% elif is_state('input_select.speakers', 'Bedroom') %} media_player.dormitorio
        {% elif is_state('input_select.speakers', 'Everywhere') %} group.everywhere_speakers
        {% endif %}
      volume_level: "{{ states('input_number.volume_speaker')  }}"
